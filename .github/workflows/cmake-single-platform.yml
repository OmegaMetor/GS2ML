# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
    - '**'
    paths-ignore:
      - 'docs/**'
  push:
    paths-ignore:
      - 'docs/**'
      - '.github/workflows/publish-docs.yml'
    branches:
    - '**'
    - '!main'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download and install pkg-config for Windows
      run: |
        $pkgConfigUrl = 'https://github.com/msys2/msys2-runtime/releases/download/2021-08-12/msys2-base-x86_64-2021-08-12.tar.xz'
        $pkgConfigDir = "$env:USERPROFILE\pkg-config"

        # Download and extract pkg-config
        mkdir $pkgConfigDir
        Invoke-WebRequest -Uri $pkgConfigUrl -OutFile "$pkgConfigDir\msys2.tar.xz"
        tar -xvf "$pkgConfigDir\msys2.tar.xz" -C "$pkgConfigDir" --strip-components=1

        # Add pkg-config to PATH
        $env:PATH = "$pkgConfigDir\usr\bin;$env:PATH"
        Write-Host "Updated PATH: $env:PATH"

        # Verify installation
        pkg-config --version
      shell: powershell

    - name: Download and install Mono
      run: |
        $monoUrl = 'https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0.199-x64-0.msi'
        $installerPath = "$env:TEMP\mono-installer.msi"
        Invoke-WebRequest -Uri $monoUrl -OutFile $installerPath
        Start-Process -Wait -FilePath msiexec -ArgumentList "/i $installerPath /qn"
        Remove-Item -Path $installerPath -Force
      shell: powershell

    - name: Verify Mono installation
      run: mono --version

    - name: Set PKG_CONFIG_PATH
      env:
        PKG_CONFIG_PATH: 'C:\\Program Files\\Mono\\lib\\pkgconfig:$PKG_CONFIG_PATH'
      run: echo "PKG_CONFIG_PATH is $PKG_CONFIG_PATH"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Tar GS2ML
      run: |
       dir out
       tar -cvf gs2ml-win64.tar .\out\bin\*
       

      
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: gs2ml-win64
        path: gs2ml-win64.tar

    - name: Tar template
      run: tar -cvf mod-template.tar .\mod_template

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: mod_template
        path: .\mod-template.tar
